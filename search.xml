<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[全新的网络加载框架Retrofit2，上位的小三]]></title>
      <url>http://yoursite.com/2016/06/17/%E5%85%A8%E6%96%B0%E7%9A%84%E7%BD%91%E7%BB%9C%E5%8A%A0%E8%BD%BD%E6%A1%86%E6%9E%B6Retrofit2%EF%BC%8C%E4%B8%8A%E4%BD%8D%E7%9A%84%E5%B0%8F%E4%B8%89/</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h3><p>&emsp; 纪念这个明天比昨天更好的时代，纪念这个二胎开放的时代，对于技术日新月累的今天，各种新的网络技术也层数不穷，从老牌的HttpClient，那时还不能称之为框架；到<code>android-async-http</code>，再到如今的老将<code>Volley</code>；曾几何时，正是<code>Xutils</code>,<code>Afindl</code>等大而全的框架盛行其道的时候，如今也已经褪去了往日的辉煌，留下了无尽的悔恨暗暗孤独终老；如今新的网络框架诸如Okhttp,Retrofit等异军突起，新技术新思想如雨后春笋般冒了出来，设计模式<code>MVP,MVVM</code>蒸蒸日上，Google都已经抛弃了<code>apache</code>，我们还有什么理由不跟紧时代；Android都已经是N了，谁还为14以下做兼容，AS都已经2.1了谁还死守着<code>Eclipse</code>；对于变化如此快的世界，我不会抱怨也不会有欣喜；默默的望着灰色的屏幕，继续敲着我未完成的代码…</p>
<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>&emsp; 来自Retrofit的官网介绍</p>
<blockquote>
<p>A type-safe HTTP client for Android and Java<br>翻译：Android和Java的类型安全的HTTP客户端</p>
</blockquote>
<p>&emsp; 首先简单介绍下Retrofit这个框架，Retrofit是底层是基于Okhttp的也就是说用法和<code>Okhttp</code>很相似；Retrofit它是一个HTTP请求工具，和Google开发的Volley功能上非常相似，这里有<a href="http://bxbxbai.github.io/2014/12/24/read-volley-source-code/" target="_blank" rel="external">Volley</a>的源码解析，但是使用上很不相似。Retrofit使用起来更简单，Volley使用上更加原始而且符合使用者的直觉，其实我觉得如果对自己Volley封装一下也可以像Retrofit那样的简单的使用；</p>
<h2 id="如何使用Retrofit"><a href="#如何使用Retrofit" class="headerlink" title="如何使用Retrofit"></a>如何使用Retrofit</h2><p>&emsp; 首先定义我们请求的Api，我们假设是这样的 </p>
<pre><code>http://106.3.227.33/pulamsi/mobileLogin/submit.html
</code></pre><a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RequestSerives</span> </span>&#123;</span><br><span class="line">   	<span class="meta">@POST</span>(<span class="string">"mobileLogin/submit.html"</span>)</span><br><span class="line">   	<span class="function">Call&lt;String&gt; <span class="title">getString</span><span class="params">(@Query(<span class="string">"loginname"</span>)</span> String loginname,</span><br><span class="line">                          @<span class="title">Query</span><span class="params">(<span class="string">"nloginpwd"</span>)</span> String nloginpwd)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[博客改版:从Wordpress到Hexo]]></title>
      <url>http://yoursite.com/2016/06/16/%E5%8D%9A%E5%AE%A2%E6%94%B9%E7%89%88/</url>
      <content type="html"><![CDATA[<p>&emsp; 之前一直有对博客进行改版的想法。从2014年最开始搭建时候使用的 Wordpress 博客到现在的 hexo 静态博客，中间也有换过很多个版本，但是都没有使用多久。</p>
<p>&emsp; 其实换版本和迁移数据是一个很大的问题，对于网站的Seo也会有影响；但是用Hexo有一个好处就是可以不用支付服务器的费用，每年节省了几百块，而且对于数据来说也比较安全，毕竟数据都是放在<a href="http://github.com" target="_blank" rel="external">Github</a>上的,不用担心忘记续费导致服务器被关停。</p>
<p>&emsp; 其实在这之前我已经注册过好几个域名了比如：aesion.cn，daidingkang.cc等等，这次迁移到Hexo就不打算在改版了，没有那么多的精力，因为很多东西都会受到牵连；可能是本人的审美的问题，比较喜欢简单白净的页面，不喜欢太花俏和繁琐；博客使用 NexT 主题，并把所有内容生成静态文件。这样访问速度也得到了保证，不像wordpress等那么臃肿；</p>
<hr>
<p>&emsp; 之前本人一直都是泡在CSDN，简书，知乎等论坛，博客一直都在CSDN撰写；本网站建成之后可能会同步部分CSDN的文章。本人程序员一枚，我认为每个程序员都应该要养成写博客的好习惯，之前看过一篇文章<a href="https://www.douban.com/note/532801016/" title="《究竟为什么程序员最好养成写博客的习惯？》" target="_blank" rel="external">《究竟为什么程序员最好养成写博客的习惯？》</a>，讲的是程序员为什么要学会写博客，文科生最怕看代码，理科生最怕写文章；写作对程序员来说可以更好的理解你的代码，任何的剖析与解读都能让你增长对代码的认识。所以只要自己有时间，闲暇的时候写篇博客，养成一种好习惯。</p>
]]></content>
    </entry>
    
  
  
</search>

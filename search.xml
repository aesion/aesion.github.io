<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[开发笔记]]></title>
      <url>http://daidingkang.cc/2017/06/22/note/</url>
      <content type="html"><![CDATA[<p>&emsp; 本文用于记录开发中遇到的知识点进行记录，方便查阅</p>
<h2 id="获取scrollview滚动的距离"><a href="#获取scrollview滚动的距离" class="headerlink" title="获取scrollview滚动的距离"></a>获取scrollview滚动的距离</h2><blockquote>
<p>商品详情页需要渐变</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">scrollView.setOnTouchListener(<span class="keyword">this</span>);</span><br><span class="line"><span class="meta">@SuppressLint</span>(<span class="string">"NewApi"</span>)</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouch</span><span class="params">(View v, MotionEvent event)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (event.getAction() == MotionEvent.ACTION_MOVE) &#123;</span><br><span class="line">        <span class="comment">// 可以监听到ScrollView的滚动事件</span></span><br><span class="line">        System.out.println(scrollView.getScrollY());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id=""><a href="#" class="headerlink" title=""></a><a id="more"></a></h2><h2 id="RecyclerView通过getItemViewType（int-position）得到不同的布局"><a href="#RecyclerView通过getItemViewType（int-position）得到不同的布局" class="headerlink" title="RecyclerView通过getItemViewType（int position）得到不同的布局"></a>RecyclerView通过getItemViewType（int position）得到不同的布局</h2><blockquote>
<p>用处广泛</p>
</blockquote>
<p>adapter的方法<br>getItemViewType 返回的是有参数position所决定的的view的id<br>getViewTypeCount 方法返回的是 你有几种样式  返回时是 int类型 ，顾名思义，就是返回不同布局的数目</p>
<p>获取子item的类型 获取类型的数量 这里是根据字段Mr_type来确定的，json数据里面是根据这个字段来确定消费记录的类型的。总之，在为item设置不同的布局的时候肯定有一个标记用来区分不同的item，你可以用这个作为判断的标记，来设置不同的type。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemViewType</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">if</span> (<span class="string">"0"</span>.equals(dataList.get(position).getMr_type())) &#123;</span><br><span class="line">			<span class="keyword">return</span> TYPE_COMSUM;<span class="comment">// 消费类型</span></span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"1"</span>.equals(dataList.get(position).getMr_type())) &#123;</span><br><span class="line">			<span class="keyword">return</span> TYPE_CHARGE;<span class="comment">// 充值类型</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">100</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getViewTypeCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> TYPE_COUNT;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p>getItemViewType和getViewTypeCount方法，看名字就知道功能了，一个是获取该项的类型，另一个是获取类型的数量。<br>所以，使用很简单，第一步，在自定义的Adapter里继承这两个方法,并实现。getItemViewType返回的值不能是自定义的，必须从0开始增长。<br>第二步，在getView方法里，根据getItemViewType返回的类型，分别inflate对应的xml,</p>
<hr>
<h2 id="判断RecycleView滑动到最后一个"><a href="#判断RecycleView滑动到最后一个" class="headerlink" title="判断RecycleView滑动到最后一个"></a>判断RecycleView滑动到最后一个</h2><blockquote>
<p>加载更多以及触发一些事件</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">       RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recycle);</span><br><span class="line">       manager = <span class="keyword">new</span> GridLayoutManager(<span class="keyword">this</span>, <span class="number">1</span>, LinearLayoutManager.HORIZONTAL, <span class="keyword">false</span>);</span><br><span class="line">       recyclerView.setLayoutManager(manager);</span><br><span class="line">       recyclerView.setAdapter(<span class="keyword">new</span> recycleAdapter(MainActivity.<span class="keyword">this</span>));</span><br><span class="line"><span class="comment">//recycleview滑动到底部</span></span><br><span class="line">       recyclerView.addOnScrollListener(<span class="keyword">new</span> RecyclerView.OnScrollListener() &#123;</span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScrollStateChanged</span><span class="params">(RecyclerView recyclerView, <span class="keyword">int</span> newState)</span> </span>&#123;</span><br><span class="line">               <span class="keyword">super</span>.onScrollStateChanged(recyclerView, newState);</span><br><span class="line">               <span class="keyword">if</span>(newState == RecyclerView.SCROLL_STATE_IDLE) &#123;<span class="comment">//当前的recycleView不滑动(滑动已经停止时)</span></span><br><span class="line">                   <span class="keyword">int</span> lastVisiblePosition = manager.findLastVisibleItemPosition();<span class="comment">//最后一个可见的位置</span></span><br><span class="line">                   <span class="keyword">if</span>(lastVisiblePosition &gt;= manager.getItemCount() - <span class="number">1</span>)&#123;<span class="comment">//如果是最后一个位置就是滑到底部了</span></span><br><span class="line">                       System.out.println(<span class="string">"滑到底部"</span>);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure>
<pre><code>* The RecyclerView is not currently scrolling.
 * 当前的recycleView不滑动(滑动已经停止时)
 */
public static final int SCROLL_STATE_IDLE = 0;

/**
 * The RecyclerView is currently being dragged by outside input such as user touch input.
 * 当前的recycleView被拖动滑动
 */
public static final int SCROLL_STATE_DRAGGING = 1;

/**
 * The RecyclerView is currently animating to a final position while not under
 * outside control.
 * 当前的recycleView在滚动到某个位置的动画过程,但没有被触摸滚动.调用 scrollToPosition(int) 应该会触发这个状态
 */
public static final int SCROLL_STATE_SETTLING = 2;
</code></pre><hr>
<h2 id="横向滑动加载更多的RecycleView"><a href="#横向滑动加载更多的RecycleView" class="headerlink" title="横向滑动加载更多的RecycleView"></a>横向滑动加载更多的RecycleView</h2><blockquote>
<p>首页抢购等应用</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * User: Daidingkang(ddk19941017@Gmail.com)</span><br><span class="line"> * Date: 2016-07-02</span><br><span class="line"> * Time: 10:42</span><br><span class="line"> * FIXME</span><br><span class="line"> * 横向滑动加载更多的RecycleView</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">horizontalRecycleView</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span> </span>&#123;</span><br><span class="line">    GridLayoutManager manager;</span><br><span class="line">    <span class="keyword">boolean</span> lastPosition;</span><br><span class="line">    Context context;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">horizontalRecycleView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">horizontalRecycleView</span><span class="params">(Context context, @Nullable AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> xMove = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">float</span> x = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (e.getAction()) &#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">                <span class="keyword">if</span> (lastPosition) &#123;</span><br><span class="line">                    x = e.getX();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">                xMove = e.getX();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">                <span class="keyword">if</span> (lastPosition) &#123;</span><br><span class="line">                    <span class="keyword">float</span> xDistance = x - xMove;</span><br><span class="line">                    <span class="keyword">if</span> ((xDistance) &gt; <span class="number">200</span>) &#123;<span class="comment">//可以判断滑动距离，而且通过正负判断为左滑还是右滑</span></span><br><span class="line">                        Toast.makeText(context, <span class="string">"触发横向加载更多"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onTouchEvent(e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">final</span> Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.context = context;</span><br><span class="line">        manager = <span class="keyword">new</span> GridLayoutManager(context, <span class="number">1</span>, LinearLayoutManager.HORIZONTAL, <span class="keyword">false</span>);</span><br><span class="line">        setLayoutManager(manager);</span><br><span class="line"></span><br><span class="line">        addOnScrollListener(<span class="keyword">new</span> OnScrollListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScrollStateChanged</span><span class="params">(RecyclerView recyclerView, <span class="keyword">int</span> newState)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.onScrollStateChanged(recyclerView, newState);</span><br><span class="line">                <span class="keyword">if</span> (newState == RecyclerView.SCROLL_STATE_IDLE) &#123;<span class="comment">//当前的recycleView不滑动(滑动已经停止时)</span></span><br><span class="line">                    <span class="keyword">int</span> lastVisiblePosition = manager.findLastVisibleItemPosition();<span class="comment">//最后一个可见的位置</span></span><br><span class="line">                    <span class="keyword">if</span> (lastVisiblePosition &gt;= manager.getItemCount() - <span class="number">1</span>) &#123;<span class="comment">//如果是最后一个位置就是滑到底部了</span></span><br><span class="line">                        lastPosition = <span class="keyword">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (lastPosition) &#123;</span><br><span class="line">                            lastPosition = <span class="keyword">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="AndroidStudio将module变为library"><a href="#AndroidStudio将module变为library" class="headerlink" title="AndroidStudio将module变为library"></a>AndroidStudio将module变为library</h2><pre><code>apply plugin: &apos;com.android.application&apos;
我们要做的就是将这一行的描述改为
apply plugin: &apos;com.android.library&apos;
注意改的是要成为library的moudule，而不是调试用的module

更改后的build.gradle
接下来，我们要删除library不能有用的一些属性

android{
    defaultConfig{
        applicationId &quot;com.my.app&quot;
    }
}

没错，applicationId这个属性，要从library中剔除
这样，我们的app就已经是一个library了
接下来，我们来将library引用到我们的demo当中 
</code></pre><hr>
<h2 id="发布项目到Jcenter"><a href="#发布项目到Jcenter" class="headerlink" title="发布项目到Jcenter"></a>发布项目到Jcenter</h2><p><a href="http://www.cnblogs.com/zhaoyanjun/p/4994981.html" target="_blank" rel="external">使用gradle-bintray-plugin发布</a></p>
<p><a href="http://blog.csdn.net/lmj623565791/article/details/51148825" target="_blank" rel="external">使用bintray-release发布</a></p>
<p>1:在<code>local.properties</code>设置<a href="http://bintray.com" target="_blank" rel="external">http://bintray.com</a>账号密码</p>
<pre><code>bintray.user=aesion
bintray.apikey=67740ec8d6b6fb9ea208f74247190xxxxxxxxx
</code></pre><p>2:在项目的根目录的<code>build:gradle</code>文件里面添加插件代码 </p>
<pre><code>classpath &apos;com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0&apos;
classpath &apos;com.github.dcendents:android-maven-gradle-plugin:1.3&apos;
</code></pre><p>3:库文件项目中的<code>build:gradle</code>的配置：</p>
<pre><code>apply plugin: &apos;com.android.library&apos;

//配置插件
apply plugin: &apos;com.github.dcendents.android-maven&apos;
apply plugin: &apos;com.jfrog.bintray&apos;

version = &quot;1.0.0&quot;       //这个是版本号，必须填写
android {
    compileSdkVersion 23
    buildToolsVersion &quot;23.0.3&quot;
    resourcePrefix &quot;aesion&quot;     //这里随便填
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName &quot;1.0&quot;
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos;
        }
    }
}

dependencies {
    compile fileTree(dir: &apos;libs&apos;, include: [&apos;*.jar&apos;])
    testCompile &apos;junit:junit:4.12&apos;
    compile &apos;com.android.support:appcompat-v7:23.2.1&apos;

}


def siteUrl = &apos;http://daidingkang.cc/&apos;      // 项目的主页   这个是说明，可随便填
def gitUrl = &apos;http://daidingkang.cc/&apos;      // Git仓库的url  这个是说明，可随便填
group = &quot;com.daidingkang&quot;    // 这里是groupId ,必须填写  一般填你唯一的包名

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging &apos;aar&apos;
                // Add your description here
                name &apos;Android View&apos;     //项目描述
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name &apos;The Apache Software License, Version 2.0&apos;
                        url &apos;http://www.apache.org/licenses/LICENSE-2.0.txt&apos;
                    }
                }
                developers {
                    developer {
                        id &apos;aesion &apos;        //填写开发者的一些基本信息
                        name &apos;daidingakng&apos;    //填写开发者的一些基本信息
                        email &apos;mail@daidingkang.cc&apos;   //填写开发者的一些基本信息
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = &apos;sources&apos;
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = &apos;javadoc&apos;
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file(&apos;local.properties&apos;).newDataInputStream())
bintray {
    user = properties.getProperty(&quot;bintray.user&quot;)    //读取 local.properties 文件里面的 bintray.user
    key = properties.getProperty(&quot;bintray.apikey&quot;)   //读取 local.properties 文件里面的 bintray.apikey
    configurations = [&apos;archives&apos;]
    pkg {
        repo = &quot;maven&quot;
        name = &quot;SnapUpCountDownTimerView&quot;    //发布到JCenter上的项目名字，必须填写
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = [&quot;Apache-2.0&quot;]
        publish = true
    }
}

javadoc {
    options{
        encoding &quot;UTF-8&quot;
        charSet &apos;UTF-8&apos;
        author true
        version true
        links &quot;http://docs.oracle.com/javase/7/docs/api&quot;
    }
}
</code></pre><p>4:执行<code>Terminal</code>命令</p>
<pre><code>执行命令    gradlew install
 执行命令    gradlew bintrayUpload
</code></pre><hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[NodeProgressView 物流节点进度]]></title>
      <url>http://daidingkang.cc/2016/06/26/NodeProgressView/</url>
      <content type="html"><![CDATA[<h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><h1 id="作者"><a href="#作者" class="headerlink" title="作者"></a>作者</h1><hr>
<p>戴定康</p>
<blockquote>
<p>博客：<a href="http://daidingkang.cc/" title="个人博客">个人博客</a></p>
<p>Csdn:<a href="http://blog.csdn.net/ddk837239693" target="_blank" rel="external">戴定康的博客</a></p>
</blockquote>
<hr>
<h1 id="NodeProgressView"><a href="#NodeProgressView" class="headerlink" title="NodeProgressView"></a>NodeProgressView</h1><blockquote>
<p>用来显示物节点进度的自定义View，仿淘宝</p>
<h4 id="版本尚未发布到Jcenter，后续将会逐一发布，让你使用更简洁"><a href="#版本尚未发布到Jcenter，后续将会逐一发布，让你使用更简洁" class="headerlink" title="版本尚未发布到Jcenter，后续将会逐一发布，让你使用更简洁"></a>版本尚未发布到Jcenter，后续将会逐一发布，让你使用更简洁</h4></blockquote>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>先拷贝View包下面的文件到你的项目，记得样式等Attr文件也要复制，不然会报错</p>
<p>在你的XMl文件中：</p>
<pre><code>&lt;com.nodeprogress.nodeprogress.view.NodeProgressView
    android:id=&quot;@+id/npv_NodeProgressView&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    app:width=&quot;2dp&quot;
    app:nodeRadius=&quot;5dp&quot;
    /&gt;
</code></pre><a id="more"></a>
<p>然后第一步，你的物流数据，我们先假设几条，一般要从服务器获取</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">List&lt;LogisticsData&gt; logisticsDatas;</span><br><span class="line">logisticsDatas = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">logisticsDatas.add(<span class="keyword">new</span> LogisticsData().setTime(<span class="string">"2016-6-28 15:13:02"</span>).setContext(<span class="string">"快件在【相城中转仓】装车,正发往【无锡分拨中心】已签收,签收人是【王漾】,签收网点是【忻州原平】"</span>));</span><br><span class="line">logisticsDatas.add(<span class="keyword">new</span> LogisticsData().setTime(<span class="string">"2016-6-28 15:13:02"</span>).setContext(<span class="string">"快件在【相城中转仓】装车,正发往【无锡分拨中心】"</span>));</span><br><span class="line">logisticsDatas.add(<span class="keyword">new</span> LogisticsData().setTime(<span class="string">"2016-6-28 15:13:02"</span>).setContext(<span class="string">"【北京鸿运良乡站】的【010058.269】正在派件"</span>));</span><br><span class="line">logisticsDatas.add(<span class="keyword">new</span> LogisticsData().setTime(<span class="string">"2016-6-28 15:13:02"</span>).setContext(<span class="string">"快件到达【潍坊市中转部】,上一站是【】"</span>));</span><br><span class="line">logisticsDatas.add(<span class="keyword">new</span> LogisticsData().setTime(<span class="string">"2016-6-28 15:13:02"</span>).setContext(<span class="string">"快件在【潍坊市中转部】装车,正发往【潍坊奎文代派】"</span>));</span><br><span class="line">logisticsDatas.add(<span class="keyword">new</span> LogisticsData().setTime(<span class="string">"2016-6-28 15:13:02"</span>).setContext(<span class="string">"快件到达【潍坊】,上一站是【潍坊市中转部】"</span>));</span><br><span class="line">logisticsDatas.add(<span class="keyword">new</span> LogisticsData().setTime(<span class="string">"2016-6-28 15:13:02"</span>).setContext(<span class="string">"快件在【武汉分拨中心】装车,正发往【晋江分拨中心】"</span>));</span><br><span class="line">logisticsDatas.add(<span class="keyword">new</span> LogisticsData().setTime(<span class="string">"2016-6-28 15:13:02"</span>).setContext(<span class="string">"【北京鸿运良乡站】的【010058.269】正在派件"</span>));</span><br><span class="line">logisticsDatas.add(<span class="keyword">new</span> LogisticsData().setTime(<span class="string">"2016-6-28 15:13:02"</span>).setContext(<span class="string">"【北京鸿运良乡站】的【010058.269】正在派件"</span>));</span><br><span class="line">logisticsDatas.add(<span class="keyword">new</span> LogisticsData().setTime(<span class="string">"2016-6-28 15:13:02"</span>).setContext(<span class="string">"【北京鸿运良乡站】的【010058.269】正在派件"</span>));</span><br><span class="line">logisticsDatas.add(<span class="keyword">new</span> LogisticsData().setTime(<span class="string">"2016-6-28 15:13:02"</span>).setContext(<span class="string">"【北京鸿运良乡站】的【010058.269】正在派件"</span>));</span><br></pre></td></tr></table></figure>
<p>第二，找到你的控件并为其设置NodeProgressAdapter适配器</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">NodeProgressView nodeProgressView = (NodeProgressView) findViewById(R.id.npv_NodeProgressView);</span><br><span class="line">nodeProgressView.setNodeProgressAdapter(<span class="keyword">new</span> NodeProgressAdapter() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> logisticsDatas.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;LogisticsData&gt; <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> logisticsDatas;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>OK，大功告成，剩下的就是交给控件了，有兴趣的童鞋可以看看源码，写的不是很好，多多指教，是不是很简单呢；</p>
<hr>
<p>下面将源码贴出，大家可以看一看</p>
<h1 id="NodeProgressView-class"><a href="#NodeProgressView-class" class="headerlink" title="NodeProgressView.class"></a>NodeProgressView.class</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * User: Daidingkang(ddk19941017@Gmail.com)</span><br><span class="line"> * Date: 2016-06-28</span><br><span class="line"> * Time: 09:43</span><br><span class="line"> * FIXME</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NodeProgressView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> width;</span><br><span class="line">    <span class="keyword">float</span> nodeRadius;</span><br><span class="line"></span><br><span class="line">    Paint paint;</span><br><span class="line"></span><br><span class="line">    Context context;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 节点间隔</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">int</span> nodeInterval;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 边距</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">int</span> top = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> dWidth;</span><br><span class="line">    <span class="keyword">int</span> dHeight;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NodeProgressView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">        <span class="keyword">this</span>.context = context;</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NodeProgressView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        <span class="keyword">this</span>.context = context;</span><br><span class="line">        TypedArray typedArray = context.obtainStyledAttributes(attrs, R.styleable.NodeProgressView);</span><br><span class="line">        width = typedArray.getDimension(R.styleable.NodeProgressView_width, <span class="number">5</span>);</span><br><span class="line">        nodeRadius = typedArray.getDimension(R.styleable.NodeProgressView_nodeRadius, <span class="number">10</span>);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NodeProgressView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        paint = <span class="keyword">new</span> Paint();</span><br><span class="line">        paint.setColor(getResources().getColor(R.color.nodeColor));</span><br><span class="line">        paint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        nodeInterval = dip2px(context, <span class="number">80</span>);</span><br><span class="line"></span><br><span class="line">        WindowManager wm = (WindowManager) getContext()</span><br><span class="line">                .getSystemService(Context.WINDOW_SERVICE);</span><br><span class="line"></span><br><span class="line">        dWidth = wm.getDefaultDisplay().getWidth();</span><br><span class="line">        dHeight = wm.getDefaultDisplay().getHeight();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    NodeProgressAdapter nodeProgressAdapter;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 设置适配数据</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNodeProgressAdapter</span><span class="params">(NodeProgressAdapter nodeProgressAdapter)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.nodeProgressAdapter = nodeProgressAdapter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        <span class="keyword">if</span> (nodeProgressAdapter == <span class="keyword">null</span> || nodeProgressAdapter.getCount() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        List data = nodeProgressAdapter.getData();</span><br><span class="line"></span><br><span class="line"><span class="comment">//        canvas.translate(20,30);偏移位置，防止遮挡</span></span><br><span class="line">        canvas.drawRect(left, top, width + left, nodeProgressAdapter.getCount() * nodeInterval + top, paint);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nodeProgressAdapter.getCount(); i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                Paint mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">                mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">                mPaint.setColor(getResources().getColor(R.color.nodeTextColor));</span><br><span class="line">                <span class="comment">//画文字</span></span><br><span class="line">                mPaint.setTextSize(<span class="number">30</span>);</span><br><span class="line">                canvas.drawText(((LogisticsData)data.get(i)).getTime()+<span class="string">""</span>, left * <span class="number">2</span> + nodeRadius * <span class="number">2</span> + <span class="number">10</span>, (i + <span class="number">1</span>) * nodeInterval + top - <span class="number">20</span>, mPaint);</span><br><span class="line"><span class="comment">//                canvas.drawText("不换行", left * 2 + nodeRadius * 2 + 10, i * nodeInterval + top + (nodeInterval / 3), mPaint);</span></span><br><span class="line">                <span class="comment">//文字换行</span></span><br><span class="line">                TextPaint textPaint = <span class="keyword">new</span> TextPaint();</span><br><span class="line">                textPaint.setColor(getResources().getColor(R.color.nodeTextColor));</span><br><span class="line">                textPaint.setTextSize(<span class="number">35.0F</span>);</span><br><span class="line">                textPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">                StaticLayout layout = <span class="keyword">new</span> StaticLayout(((LogisticsData)data.get(i)).getContext()+<span class="string">""</span>, textPaint, (<span class="keyword">int</span>) (dWidth * <span class="number">0.8</span>), Layout.Alignment.ALIGN_NORMAL, <span class="number">1.0F</span>, <span class="number">0.0F</span>, <span class="keyword">true</span>);</span><br><span class="line">                canvas.save();</span><br><span class="line">                canvas.translate(left * <span class="number">2</span> + nodeRadius * <span class="number">2</span> + <span class="number">10</span>, i * nodeInterval + top + (nodeInterval / <span class="number">4</span>));</span><br><span class="line">                layout.draw(canvas);</span><br><span class="line">                canvas.restore();<span class="comment">//重置</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//画圆</span></span><br><span class="line">                canvas.drawCircle(width / <span class="number">2</span> + left, i * nodeInterval + top, nodeRadius + <span class="number">2</span>, mPaint);</span><br><span class="line">                mPaint.setStyle(Paint.Style.STROKE);<span class="comment">//设置为空心</span></span><br><span class="line">                mPaint.setStrokeWidth(<span class="number">8</span>);<span class="comment">//空心宽度</span></span><br><span class="line">                mPaint.setAlpha(<span class="number">88</span>);</span><br><span class="line">                canvas.drawCircle(width / <span class="number">2</span> + left, i * nodeInterval + top, nodeRadius + <span class="number">4</span>, mPaint);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                paint.setColor(getResources().getColor(R.color.nodeColor));</span><br><span class="line">                canvas.drawCircle(width / <span class="number">2</span> + left, i * nodeInterval + top, nodeRadius, paint);</span><br><span class="line">                canvas.drawLine(left * <span class="number">2</span> + nodeRadius * <span class="number">2</span>, i * nodeInterval + top, dWidth, i * nodeInterval + top, paint); <span class="comment">//画线</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment">//画文字</span></span><br><span class="line">                paint.setTextSize(<span class="number">30</span>);</span><br><span class="line">                canvas.drawText(((LogisticsData)data.get(i)).getTime()+<span class="string">""</span>, left * <span class="number">2</span> + nodeRadius * <span class="number">2</span> + <span class="number">10</span>, (i + <span class="number">1</span>) * nodeInterval + top - <span class="number">20</span>, paint);</span><br><span class="line">                <span class="comment">//文字换行</span></span><br><span class="line">                TextPaint textPaint = <span class="keyword">new</span> TextPaint();</span><br><span class="line">                textPaint.setColor(getResources().getColor(R.color.nodeColor));</span><br><span class="line">                textPaint.setTextSize(<span class="number">35.0F</span>);</span><br><span class="line">                textPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">                StaticLayout layout = <span class="keyword">new</span> StaticLayout(((LogisticsData)data.get(i)).getContext()+<span class="string">""</span>, textPaint, (<span class="keyword">int</span>) (dWidth * <span class="number">0.8</span>), Layout.Alignment.ALIGN_NORMAL, <span class="number">1.0F</span>, <span class="number">0.0F</span>, <span class="keyword">true</span>);</span><br><span class="line">                canvas.save();<span class="comment">//很重要，不然会样式出错</span></span><br><span class="line">                canvas.translate(left * <span class="number">2</span> + nodeRadius * <span class="number">2</span> + <span class="number">10</span>, i * nodeInterval + top + (nodeInterval / <span class="number">4</span>));</span><br><span class="line">                layout.draw(canvas);</span><br><span class="line">                canvas.restore();<span class="comment">//重置</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">        <span class="keyword">if</span> (nodeProgressAdapter == <span class="keyword">null</span> || nodeProgressAdapter.getCount() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        setMeasuredDimension(widthMeasureSpec, nodeProgressAdapter.getCount() * nodeInterval + top);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 根据手机的分辨率从 dp 的单位 转成为 px(像素)</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dip2px</span><span class="params">(Context context, <span class="keyword">float</span> dpValue)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">float</span> scale = context.getResources().getDisplayMetrics().density;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) (dpValue * scale + <span class="number">0.5f</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>值得注意的是使用此控件的童鞋，里面有一个JavaBean需要实现，你也可以继承自此Bean</p>
<h1 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h1><blockquote>
<p>点击即可下载 <a href="https://github.com/aesion/NodeProgressView" target="_blank" rel="external"><strong>NodeProgressView</strong></a><br>下载的童鞋希望多多star and fork；</p>
</blockquote>
<p>实例：</p>
<p><img src="https://raw.githubusercontent.com/aesion/NodeProgressView/master/image/S60628-152145.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SnapUpCountDownTimerView 抢购倒计时控件]]></title>
      <url>http://daidingkang.cc/2016/06/26/SnapUpCountDownTimerView/</url>
      <content type="html"><![CDATA[<h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><h1 id="作者"><a href="#作者" class="headerlink" title="作者"></a>作者</h1><hr>
<p>戴定康</p>
<blockquote>
<p>博客：<a href="http://daidingkang.cc/" title="个人博客">个人博客</a></p>
<p>Csdn:<a href="http://blog.csdn.net/ddk837239693" target="_blank" rel="external">戴定康的博客</a></p>
</blockquote>
<hr>
<h1 id="SnapUpCountDownTimerView"><a href="#SnapUpCountDownTimerView" class="headerlink" title="SnapUpCountDownTimerView"></a>SnapUpCountDownTimerView</h1><p>抢购倒计时，样式可调，大小可调，Gradle引用更方便。countDown</p>
<h2 id="Gradle引用"><a href="#Gradle引用" class="headerlink" title="Gradle引用"></a>Gradle引用</h2><pre><code>compile &apos;com.daidingkang:snapupcountdowntimerview:1.0.0&apos;
</code></pre><h2 id="在你的Xml中"><a href="#在你的Xml中" class="headerlink" title="在你的Xml中"></a>在你的Xml中</h2><pre><code>&lt;com.daidingkang.SnapUpCountDownTimerView
android:id=&quot;@+id/RushBuyCountDownTimerView&quot;
android:layout_width=&quot;wrap_content&quot;
android:layout_height=&quot;wrap_content&quot;
android:layout_marginLeft=&quot;20dp&quot;
app:viewSize=&quot;12&quot;&gt;
&lt;/com.daidingkang.SnapUpCountDownTimerView&gt;
</code></pre><a id="more"></a>
<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SnapUpCountDownTimerView rushBuyCountDownTimerView = (SnapUpCountDownTimerView) findViewById(R.id.RushBuyCountDownTimerView);</span><br><span class="line">      rushBuyCountDownTimerView.setTime(<span class="number">1</span>,<span class="number">55</span>,<span class="number">3</span>);<span class="comment">//设置小时，分钟，秒。注意不能大于正常值，否则会抛出异常</span></span><br><span class="line">      rushBuyCountDownTimerView.start();<span class="comment">//开始倒计时</span></span><br></pre></td></tr></table></figure>
<pre><code>rushBuyCountDownTimerView.stop();//停止倒计时
</code></pre><p>So easy 是不是很简单，赶紧试试吧<br>喜欢的童鞋欢迎Star and Fork</p>
<h1 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h1><blockquote>
<p>点击即可下载 <a href="https://github.com/aesion/SnapUpCountDownTimerView" target="_blank" rel="external"><strong>SnapUpCountDownTimerView</strong></a><br>下载的童鞋希望多多star and fork；</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/aesion/SnapUpCountDownTimerView/master/images/S60702-170557.jpg" alt=""></p>
<p><img src="https://raw.githubusercontent.com/aesion/SnapUpCountDownTimerView/master/images/S60702-172429.jpg" alt=""></p>
<p>当然，我们安卓自带了一个CountDownTimer类，大家可以看一看</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> TextView vertifyView;  </span><br><span class="line">    <span class="keyword">private</span> CountDownTimer timer = <span class="keyword">new</span> CountDownTimer(<span class="number">10000</span>, <span class="number">1000</span>) &#123;  </span><br><span class="line">  </span><br><span class="line">        <span class="meta">@Override</span>  </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTick</span><span class="params">(<span class="keyword">long</span> millisUntilFinished)</span> </span>&#123;  </span><br><span class="line">            vertifyView.setText((millisUntilFinished / <span class="number">1000</span>) + <span class="string">"秒后可重发"</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="meta">@Override</span>  </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFinish</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">            vertifyView.setEnabled(<span class="keyword">true</span>);  </span><br><span class="line">            vertifyView.setText(<span class="string">"获取验证码"</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[全新的网络加载框架Retrofit2，上位的小三]]></title>
      <url>http://daidingkang.cc/2016/06/17/Retrofit2-network-framework-parsing/</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h3><p>&emsp; 纪念这个明天比昨天更好的时代，纪念这个二胎开放的时代，对于技术日新月累的今天，各种新的网络技术也层数不穷，从老牌的HttpClient，那时还不能称之为框架；到<code>android-async-http</code>，再到如今的老将<code>Volley</code>；曾几何时，正是<code>Xutils</code>,<code>Afindl</code>等大而全的框架盛行其道的时候，如今也已经褪去了往日的辉煌，留下了无尽的悔恨暗暗孤独终老；如今新的网络框架诸如Okhttp,Retrofit等异军突起，新技术新思想如雨后春笋般冒了出来，设计模式<code>MVP,MVVM</code>蒸蒸日上，Google都已经抛弃了<code>apache</code>，我们还有什么理由不跟紧时代；Android都已经是N了，谁还为14以下做兼容，AS都已经2.1了谁还死守着<code>Eclipse</code>；对于变化如此快的世界，我不会抱怨也不会有欣喜；默默的望着灰色的屏幕，继续敲着我未完成的代码…</p>
<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>&emsp; 来自Retrofit的官网介绍</p>
<blockquote>
<p>A type-safe HTTP client for Android and Java<br>翻译：Android和Java的类型安全的HTTP客户端</p>
</blockquote>
<p>&emsp; 首先简单介绍下Retrofit这个框架，Retrofit是底层是基于Okhttp的也就是说用法和<code>Okhttp</code>很相似；Retrofit它是一个HTTP请求工具，和Google开发的Volley功能上非常相似，这里有<a href="http://bxbxbai.github.io/2014/12/24/read-volley-source-code/" target="_blank" rel="external">Volley</a>的源码解析，但是使用上很不相似。Retrofit使用起来更简单，Volley使用上更加原始而且符合使用者的直觉，其实我觉得如果对自己Volley封装一下也可以像Retrofit那样的简单的使用；</p>
<h2 id="如何使用Retrofit"><a href="#如何使用Retrofit" class="headerlink" title="如何使用Retrofit"></a>如何使用Retrofit</h2><p>&emsp; 第一步当然是导包了，需要导入的包如下：</p>
<pre><code>compile &apos;io.reactivex:rxjava:1.1.0&apos;//Rx的包
compile &apos;io.reactivex:rxandroid:1.1.0&apos;//Rx的包
compile &apos;com.squareup.retrofit2:retrofit:2.0.0-beta4&apos;//Retrofit2所需要的包
compile &apos;com.squareup.retrofit2:converter-gson:2.0.0-beta4&apos;//ConverterFactory的Gson依赖包
compile &apos;com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4&apos;//CallAdapterFactory的Rx依赖包
compile &apos;com.squareup.retrofit2:converter-scalars:2.0.0-beta4&apos;//ConverterFactory的String依赖包
compile &apos;com.google.code.gson:gson:2.6.2&apos;//Gosn解析包
</code></pre><p>这里需要值得注意的是导入的retrofit2包的<strong>版本必须要一致</strong>，否则就会报错，我跳过的坑大家就不要再跳了<br><img src="\images\retrofit2-error.png" alt=""></p>
<p>&emsp; 首先定义我们请求的Api，我们假设是这样的 </p>
<pre><code>http://106.3.227.33/pulamsi/mobileLogin/submit.html
</code></pre><p>与Okhttp不同的是，Retrofit需要定义一个接口，用来返回我们的Call对象，这里示范的是Post请求：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RequestSerives</span> </span>&#123;</span><br><span class="line">   	<span class="meta">@POST</span>(<span class="string">"mobileLogin/submit.html"</span>)</span><br><span class="line">   	<span class="function">Call&lt;String&gt; <span class="title">getString</span><span class="params">(@Query(<span class="string">"loginname"</span>)</span> String loginname,</span><br><span class="line">                          @<span class="title">Query</span><span class="params">(<span class="string">"nloginpwd"</span>)</span> String nloginpwd)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>细心的同学可能注意到了，这段代码用了两个注解，我们一一来解答；</p>
<p>Retrofit提供的请求方式注解有<code>@GET</code>和<code>@POST</code>，参数注解有<code>@PATH</code>和<code>@Query</code>等，我们只介绍常用的;前两个顾名思义就是定义你的请求方式<code>Get or Post</code>，后面的<code>@PATH</code>指的是通过参数填充完整的路径，一般用法：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GET</span>(<span class="string">"&#123;name&#125;"</span>)</span><br><span class="line">   <span class="function">Call&lt;User&gt; <span class="title">getUser</span><span class="params">(@Path(<span class="string">"name"</span>)</span> String name)</span>;</span><br></pre></td></tr></table></figure>
<p>这里的参数username会被填充至<code>{name}</code>中，形成完整的Url请求地址，<code>{name}</code>相当于一个占位符；</p>
<p><code>@Query</code>就是我们的请求的键值对的设置，我们构建Call对象的时候会传入此参数，<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@POST</span>(<span class="string">"mobileLogin/submit.html"</span>)</span><br><span class="line">   	<span class="function">Call&lt;String&gt; <span class="title">getString</span><span class="params">(@Query(<span class="string">"loginname"</span>)</span> String loginname,</span><br><span class="line">                          @<span class="title">Query</span><span class="params">(<span class="string">"nloginpwd"</span>)</span> String nloginpwd)</span>;</span><br></pre></td></tr></table></figure></p>
<p>这里<code>@Query(&quot;loginname&quot;)</code>就是键，后面的<code>loginname</code>就是具体的值了，值得注意的是Get和Post请求，都是这样填充参数的；</p>
<p>接口写完了之后我们需要来定义Retrofit对象来进行请求了；</p>
<h3 id="创建一个Retrofit-对象"><a href="#创建一个Retrofit-对象" class="headerlink" title="创建一个Retrofit 对象"></a>创建一个Retrofit 对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Retrofit retrofit = <span class="keyword">new</span> Retrofit.Builder()</span><br><span class="line">               .baseUrl(<span class="string">"http://106.3.227.33/pulamsi/"</span>)</span><br><span class="line">               <span class="comment">//增加返回值为String的支持</span></span><br><span class="line">               .addConverterFactory(ScalarsConverterFactory.create())</span><br><span class="line">               <span class="comment">//增加返回值为Gson的支持(以实体类返回)</span></span><br><span class="line">               .addConverterFactory(GsonConverterFactory.create())</span><br><span class="line">               <span class="comment">//增加返回值为Oservable&lt;T&gt;的支持</span></span><br><span class="line">               .addCallAdapterFactory(RxJavaCallAdapterFactory.create())</span><br><span class="line">               .build();</span><br></pre></td></tr></table></figure>
<p>这里的<code>baseurl</code>加上之前<code>@POST(&quot;mobileLogin/submit.html&quot;)</code>定义的参数形成完整的请求地址；</p>
<p><code>addConverterFactory(ScalarsConverterFactory.create())</code>的意思是构建了一个返回支持，如果你的Call对象的泛型接收另外的格式需要添加另外的支持，上述代码已经列出；</p>
<p>接下来我们用这个<code>Retrofit</code>对象创建一个<code>RequestSerives</code>接口对象，也就是我们之前定义的那个接口，并且得到我们的Call对象；</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RequestSerives requestSerives = retrofit.create(RequestSerives.class);<span class="comment">//这里采用的是Java的动态代理模式</span></span><br><span class="line">Call&lt;String&gt; call = requestSerives.getString(<span class="string">"userName"</span>, <span class="string">"1234"</span>);<span class="comment">//传入我们请求的键值对的值</span></span><br></pre></td></tr></table></figure>
<p>利用得到的Call对象，然后我们就发出网络请求了：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> call.enqueue(<span class="keyword">new</span> Callback&lt;String&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call&lt;String&gt; call, Response&lt;String&gt; response)</span> </span>&#123;</span><br><span class="line">        Log.e(<span class="string">"成功"</span>,response.body().toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call&lt;String&gt; call, Throwable t)</span> </span>&#123;</span><br><span class="line">        Log.e(<span class="string">"失败"</span>,<span class="string">"失败"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>请求成功会调用<code>onResponse</code>方法，并且请求成功的值在<code>response.body()</code>中，失败则会调用<code>onFailure</code>，怎么样，是不是很简单呢。</p>
<p>下面我贴出完整的代码，主要是两个类<strong>RequestSerives</strong>和<strong>MainActivity</strong>；</p>
<hr>
<h3 id="RequestSerives-class"><a href="#RequestSerives-class" class="headerlink" title="RequestSerives.class"></a>RequestSerives.class</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> retrofit2.Call;</span><br><span class="line"><span class="keyword">import</span> retrofit2.http.POST;</span><br><span class="line"><span class="keyword">import</span> retrofit2.http.Query;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line">* User: Daidingkang(ddk19941017@Gmail.com)</span><br><span class="line">* Date: 2016-06-15</span><br><span class="line">* Time: 11:22</span><br><span class="line">* FIXME</span><br><span class="line">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RequestSerives</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   	<span class="meta">@POST</span>(<span class="string">"mobileLogin/submit.html"</span>)</span><br><span class="line">   	<span class="function">Call&lt;String&gt; <span class="title">getString</span><span class="params">(@Query(<span class="string">"loginname"</span>)</span> String loginname,</span><br><span class="line">                          @<span class="title">Query</span><span class="params">(<span class="string">"nloginpwd"</span>)</span> String nloginpwd)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="MainActivity-class"><a href="#MainActivity-class" class="headerlink" title="MainActivity.class"></a>MainActivity.class</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Retrofit retrofit = <span class="keyword">new</span> Retrofit.Builder()</span><br><span class="line">                .baseUrl(<span class="string">"http://106.3.227.33/pulamsi/"</span>)</span><br><span class="line">                .addConverterFactory(ScalarsConverterFactory.create())</span><br><span class="line">                .build();</span><br><span class="line">        RequestSerives requestSerives = retrofit.create(RequestSerives.class);</span><br><span class="line">        Call&lt;String&gt; call = requestSerives.getString(<span class="string">"13288453023"</span>, <span class="string">"654"</span>);</span><br><span class="line">        call.enqueue(<span class="keyword">new</span> Callback&lt;String&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call&lt;String&gt; call, Response&lt;String&gt; response)</span> </span>&#123;</span><br><span class="line">                Log.e(<span class="string">"成功"</span>,response.body().toString());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call&lt;String&gt; call, Throwable t)</span> </span>&#123;</span><br><span class="line">                Log.e(<span class="string">"失败"</span>,<span class="string">"失败"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[博客改版:从Wordpress到Hexo]]></title>
      <url>http://daidingkang.cc/2016/06/16/%E5%8D%9A%E5%AE%A2%E6%94%B9%E7%89%88/</url>
      <content type="html"><![CDATA[<p>&emsp; 之前一直有对博客进行改版的想法。从2014年最开始搭建时候使用的 Wordpress 博客到现在的 hexo 静态博客，中间也有换过很多个版本，但是都没有使用多久。</p>
<p>&emsp; 其实换版本和迁移数据是一个很大的问题，对于网站的Seo也会有影响；但是用Hexo有一个好处就是可以不用支付服务器的费用，每年节省了几百块，而且对于数据来说也比较安全，毕竟数据都是放在<a href="http://github.com" target="_blank" rel="external">Github</a>上的,不用担心忘记续费导致服务器被关停。</p>
<p>&emsp; 其实在这之前我已经注册过好几个域名了比如：aesion.cn，daidingkang.cc等等，这次迁移到Hexo就不打算在改版了，没有那么多的精力，因为很多东西都会受到牵连；可能是本人的审美的问题，比较喜欢简单白净的页面，不喜欢太花俏和繁琐；博客使用 NexT 主题，并把所有内容生成静态文件。这样访问速度也得到了保证，不像wordpress等那么臃肿；</p>
<hr>
<p>&emsp; 之前本人一直都是泡在CSDN，简书，知乎等论坛，博客一直都在CSDN撰写；本网站建成之后可能会同步部分CSDN的文章。本人程序员一枚，我认为每个程序员都应该要养成写博客的好习惯，之前看过一篇文章<a href="https://www.douban.com/note/532801016/" title="《究竟为什么程序员最好养成写博客的习惯？》" target="_blank" rel="external">《究竟为什么程序员最好养成写博客的习惯？》</a>，讲的是程序员为什么要学会写博客，文科生最怕看代码，理科生最怕写文章；写作对程序员来说可以更好的理解你的代码，任何的剖析与解读都能让你增长对代码的认识。所以只要自己有时间，闲暇的时候写篇博客，养成一种好习惯。</p>
]]></content>
    </entry>
    
  
  
</search>

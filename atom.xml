<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>戴定康的博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-06-23T07:49:42.256Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Aesion Dai</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>开发笔记</title>
    <link href="http://yoursite.com/2016/06/22/note/"/>
    <id>http://yoursite.com/2016/06/22/note/</id>
    <published>2016-06-22T07:55:01.000Z</published>
    <updated>2016-06-23T07:49:42.256Z</updated>
    
    <content type="html">&lt;p&gt;&amp;emsp; 本文用于记录开发中遇到的知识点进行记录，方便查阅&lt;/p&gt;
&lt;h2 id=&quot;获取scrollview滚动的距离&quot;&gt;&lt;a href=&quot;#获取scrollview滚动的距离&quot; class=&quot;headerlink&quot; title=&quot;获取scrollview滚动的距离&quot;&gt;&lt;/a&gt;获取scrollview滚动的距离&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;商品详情页需要渐变&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;scrollView.setOnTouchListener(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@SuppressLint&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;NewApi&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onTouch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View v, MotionEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (event.getAction() == MotionEvent.ACTION_MOVE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 可以监听到ScrollView的滚动事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(scrollView.getScrollY());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp; 本文用于记录开发中遇到的知识点进行记录，方便查阅&lt;/p&gt;
&lt;h2 id=&quot;获取scrollview滚动的距离&quot;&gt;&lt;a href=&quot;#获取scrollview滚动的距离&quot; class=&quot;headerlink&quot; title=&quot;获取scrollview滚动的距离&quot;&gt;&lt;/a&gt;获取scrollview滚动的距离&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;商品详情页需要渐变&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;scrollView.setOnTouchListener(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@SuppressLint&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;NewApi&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onTouch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View v, MotionEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (event.getAction() == MotionEvent.ACTION_MOVE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 可以监听到ScrollView的滚动事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(scrollView.getScrollY());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;
    
    </summary>
    
      <category term="note" scheme="http://yoursite.com/categories/note/"/>
    
    
      <category term="note" scheme="http://yoursite.com/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>全新的网络加载框架Retrofit2，上位的小三</title>
    <link href="http://yoursite.com/2016/06/17/Retrofit2-network-framework-parsing/"/>
    <id>http://yoursite.com/2016/06/17/Retrofit2-network-framework-parsing/</id>
    <published>2016-06-17T07:42:09.000Z</published>
    <updated>2016-06-21T02:17:04.937Z</updated>
    
    <content type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言:&quot;&gt;&lt;/a&gt;前言:&lt;/h3&gt;&lt;p&gt;&amp;emsp; 纪念这个明天比昨天更好的时代，纪念这个二胎开放的时代，对于技术日新月累的今天，各种新的网络技术也层数不穷，从老牌的HttpClient，那时还不能称之为框架；到&lt;code&gt;android-async-http&lt;/code&gt;，再到如今的老将&lt;code&gt;Volley&lt;/code&gt;；曾几何时，正是&lt;code&gt;Xutils&lt;/code&gt;,&lt;code&gt;Afindl&lt;/code&gt;等大而全的框架盛行其道的时候，如今也已经褪去了往日的辉煌，留下了无尽的悔恨暗暗孤独终老；如今新的网络框架诸如Okhttp,Retrofit等异军突起，新技术新思想如雨后春笋般冒了出来，设计模式&lt;code&gt;MVP,MVVM&lt;/code&gt;蒸蒸日上，Google都已经抛弃了&lt;code&gt;apache&lt;/code&gt;，我们还有什么理由不跟紧时代；Android都已经是N了，谁还为14以下做兼容，AS都已经2.1了谁还死守着&lt;code&gt;Eclipse&lt;/code&gt;；对于变化如此快的世界，我不会抱怨也不会有欣喜；默默的望着灰色的屏幕，继续敲着我未完成的代码…&lt;/p&gt;
&lt;h2 id=&quot;主题&quot;&gt;&lt;a href=&quot;#主题&quot; class=&quot;headerlink&quot; title=&quot;主题&quot;&gt;&lt;/a&gt;主题&lt;/h2&gt;&lt;p&gt;&amp;emsp; 来自Retrofit的官网介绍&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A type-safe HTTP client for Android and Java&lt;br&gt;翻译：Android和Java的类型安全的HTTP客户端&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;emsp; 首先简单介绍下Retrofit这个框架，Retrofit是底层是基于Okhttp的也就是说用法和&lt;code&gt;Okhttp&lt;/code&gt;很相似；Retrofit它是一个HTTP请求工具，和Google开发的Volley功能上非常相似，这里有&lt;a href=&quot;http://bxbxbai.github.io/2014/12/24/read-volley-source-code/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Volley&lt;/a&gt;的源码解析，但是使用上很不相似。Retrofit使用起来更简单，Volley使用上更加原始而且符合使用者的直觉，其实我觉得如果对自己Volley封装一下也可以像Retrofit那样的简单的使用；&lt;/p&gt;
&lt;h2 id=&quot;如何使用Retrofit&quot;&gt;&lt;a href=&quot;#如何使用Retrofit&quot; class=&quot;headerlink&quot; title=&quot;如何使用Retrofit&quot;&gt;&lt;/a&gt;如何使用Retrofit&lt;/h2&gt;&lt;p&gt;&amp;emsp; 第一步当然是导包了，需要导入的包如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;compile &amp;apos;io.reactivex:rxjava:1.1.0&amp;apos;//Rx的包
compile &amp;apos;io.reactivex:rxandroid:1.1.0&amp;apos;//Rx的包
compile &amp;apos;com.squareup.retrofit2:retrofit:2.0.0-beta4&amp;apos;//Retrofit2所需要的包
compile &amp;apos;com.squareup.retrofit2:converter-gson:2.0.0-beta4&amp;apos;//ConverterFactory的Gson依赖包
compile &amp;apos;com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4&amp;apos;//CallAdapterFactory的Rx依赖包
compile &amp;apos;com.squareup.retrofit2:converter-scalars:2.0.0-beta4&amp;apos;//ConverterFactory的String依赖包
compile &amp;apos;com.google.code.gson:gson:2.6.2&amp;apos;//Gosn解析包
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里需要值得注意的是导入的retrofit2包的&lt;strong&gt;版本必须要一致&lt;/strong&gt;，否则就会报错，我跳过的坑大家就不要再跳了&lt;br&gt;&lt;img src=&quot;\images\retrofit2-error.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp; 首先定义我们请求的Api，我们假设是这样的 &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://106.3.227.33/pulamsi/mobileLogin/submit.html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;与Okhttp不同的是，Retrofit需要定义一个接口，用来返回我们的Call对象，这里示范的是Post请求：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RequestSerives&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;meta&quot;&gt;@POST&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;mobileLogin/submit.html&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;function&quot;&gt;Call&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@Query(&lt;span class=&quot;string&quot;&gt;&quot;loginname&quot;&lt;/span&gt;)&lt;/span&gt; String loginname,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          @&lt;span class=&quot;title&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;nloginpwd&quot;&lt;/span&gt;)&lt;/span&gt; String nloginpwd)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;细心的同学可能注意到了，这段代码用了两个注解，我们一一来解答；&lt;/p&gt;
&lt;p&gt;Retrofit提供的请求方式注解有&lt;code&gt;@GET&lt;/code&gt;和&lt;code&gt;@POST&lt;/code&gt;，参数注解有&lt;code&gt;@PATH&lt;/code&gt;和&lt;code&gt;@Query&lt;/code&gt;等，我们只介绍常用的;前两个顾名思义就是定义你的请求方式&lt;code&gt;Get or Post&lt;/code&gt;，后面的&lt;code&gt;@PATH&lt;/code&gt;指的是通过参数填充完整的路径，一般用法：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@GET&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;name&amp;#125;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;Call&amp;lt;User&amp;gt; &lt;span class=&quot;title&quot;&gt;getUser&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@Path(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;)&lt;/span&gt; String name)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里的参数username会被填充至&lt;code&gt;{name}&lt;/code&gt;中，形成完整的Url请求地址，&lt;code&gt;{name}&lt;/code&gt;相当于一个占位符；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@Query&lt;/code&gt;就是我们的请求的键值对的设置，我们构建Call对象的时候会传入此参数，&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@POST&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;mobileLogin/submit.html&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;function&quot;&gt;Call&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@Query(&lt;span class=&quot;string&quot;&gt;&quot;loginname&quot;&lt;/span&gt;)&lt;/span&gt; String loginname,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          @&lt;span class=&quot;title&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;nloginpwd&quot;&lt;/span&gt;)&lt;/span&gt; String nloginpwd)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里&lt;code&gt;@Query(&amp;quot;loginname&amp;quot;)&lt;/code&gt;就是键，后面的&lt;code&gt;loginname&lt;/code&gt;就是具体的值了，值得注意的是Get和Post请求，都是这样填充参数的；&lt;/p&gt;
&lt;p&gt;接口写完了之后我们需要来定义Retrofit对象来进行请求了；&lt;/p&gt;
&lt;h3 id=&quot;创建一个Retrofit-对象&quot;&gt;&lt;a href=&quot;#创建一个Retrofit-对象&quot; class=&quot;headerlink&quot; title=&quot;创建一个Retrofit 对象&quot;&gt;&lt;/a&gt;创建一个Retrofit 对象&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Retrofit retrofit = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Retrofit.Builder()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               .baseUrl(&lt;span class=&quot;string&quot;&gt;&quot;http://106.3.227.33/pulamsi/&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;comment&quot;&gt;//增加返回值为String的支持&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               .addConverterFactory(ScalarsConverterFactory.create())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;comment&quot;&gt;//增加返回值为Gson的支持(以实体类返回)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               .addConverterFactory(GsonConverterFactory.create())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;comment&quot;&gt;//增加返回值为Oservable&amp;lt;T&amp;gt;的支持&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               .addCallAdapterFactory(RxJavaCallAdapterFactory.create())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               .build();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里的&lt;code&gt;baseurl&lt;/code&gt;加上之前&lt;code&gt;@POST(&amp;quot;mobileLogin/submit.html&amp;quot;)&lt;/code&gt;定义的参数形成完整的请求地址；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;addConverterFactory(ScalarsConverterFactory.create())&lt;/code&gt;的意思是构建了一个返回支持，如果你的Call对象的泛型接收另外的格式需要添加另外的支持，上述代码已经列出；&lt;/p&gt;
&lt;p&gt;接下来我们用这个&lt;code&gt;Retrofit&lt;/code&gt;对象创建一个&lt;code&gt;RequestSerives&lt;/code&gt;接口对象，也就是我们之前定义的那个接口，并且得到我们的Call对象；&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RequestSerives requestSerives = retrofit.create(RequestSerives.class);&lt;span class=&quot;comment&quot;&gt;//这里采用的是Java的动态代理模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Call&amp;lt;String&amp;gt; call = requestSerives.getString(&lt;span class=&quot;string&quot;&gt;&quot;userName&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;1234&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//传入我们请求的键值对的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;利用得到的Call对象，然后我们就发出网络请求了：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; call.enqueue(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Callback&amp;lt;String&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onResponse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Call&amp;lt;String&amp;gt; call, Response&amp;lt;String&amp;gt; response)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.e(&lt;span class=&quot;string&quot;&gt;&quot;成功&quot;&lt;/span&gt;,response.body().toString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onFailure&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Call&amp;lt;String&amp;gt; call, Throwable t)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.e(&lt;span class=&quot;string&quot;&gt;&quot;失败&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;失败&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;请求成功会调用&lt;code&gt;onResponse&lt;/code&gt;方法，并且请求成功的值在&lt;code&gt;response.body()&lt;/code&gt;中，失败则会调用&lt;code&gt;onFailure&lt;/code&gt;，怎么样，是不是很简单呢。&lt;/p&gt;
&lt;p&gt;下面我贴出完整的代码，主要是两个类&lt;strong&gt;RequestSerives&lt;/strong&gt;和&lt;strong&gt;MainActivity&lt;/strong&gt;；&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;RequestSerives-class&quot;&gt;&lt;a href=&quot;#RequestSerives-class&quot; class=&quot;headerlink&quot; title=&quot;RequestSerives.class&quot;&gt;&lt;/a&gt;RequestSerives.class&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; retrofit2.Call;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; retrofit2.http.POST;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; retrofit2.http.Query;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* User: Daidingkang(ddk19941017@Gmail.com)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* Date: 2016-06-15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* Time: 11:22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* FIXME&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RequestSerives&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;meta&quot;&gt;@POST&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;mobileLogin/submit.html&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;function&quot;&gt;Call&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@Query(&lt;span class=&quot;string&quot;&gt;&quot;loginname&quot;&lt;/span&gt;)&lt;/span&gt; String loginname,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          @&lt;span class=&quot;title&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;nloginpwd&quot;&lt;/span&gt;)&lt;/span&gt; String nloginpwd)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h3 id=&quot;MainActivity-class&quot;&gt;&lt;a href=&quot;#MainActivity-class&quot; class=&quot;headerlink&quot; title=&quot;MainActivity.class&quot;&gt;&lt;/a&gt;MainActivity.class&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setContentView(R.layout.activity_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Retrofit retrofit = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Retrofit.Builder()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .baseUrl(&lt;span class=&quot;string&quot;&gt;&quot;http://106.3.227.33/pulamsi/&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .addConverterFactory(ScalarsConverterFactory.create())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        RequestSerives requestSerives = retrofit.create(RequestSerives.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Call&amp;lt;String&amp;gt; call = requestSerives.getString(&lt;span class=&quot;string&quot;&gt;&quot;13288453023&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;654&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        call.enqueue(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Callback&amp;lt;String&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onResponse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Call&amp;lt;String&amp;gt; call, Response&amp;lt;String&amp;gt; response)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Log.e(&lt;span class=&quot;string&quot;&gt;&quot;成功&quot;&lt;/span&gt;,response.body().toString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onFailure&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Call&amp;lt;String&amp;gt; call, Throwable t)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Log.e(&lt;span class=&quot;string&quot;&gt;&quot;失败&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;失败&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言:&quot;&gt;&lt;/a&gt;前言:&lt;/h3&gt;&lt;p&gt;&amp;emsp; 纪念这个明天比昨天更好的时代，纪念这个二胎开放的时代，对于技术日新月累的今天，各种新的网络技术也层数不穷，从老牌的HttpClient，那时还不能称之为框架；到&lt;code&gt;android-async-http&lt;/code&gt;，再到如今的老将&lt;code&gt;Volley&lt;/code&gt;；曾几何时，正是&lt;code&gt;Xutils&lt;/code&gt;,&lt;code&gt;Afindl&lt;/code&gt;等大而全的框架盛行其道的时候，如今也已经褪去了往日的辉煌，留下了无尽的悔恨暗暗孤独终老；如今新的网络框架诸如Okhttp,Retrofit等异军突起，新技术新思想如雨后春笋般冒了出来，设计模式&lt;code&gt;MVP,MVVM&lt;/code&gt;蒸蒸日上，Google都已经抛弃了&lt;code&gt;apache&lt;/code&gt;，我们还有什么理由不跟紧时代；Android都已经是N了，谁还为14以下做兼容，AS都已经2.1了谁还死守着&lt;code&gt;Eclipse&lt;/code&gt;；对于变化如此快的世界，我不会抱怨也不会有欣喜；默默的望着灰色的屏幕，继续敲着我未完成的代码…&lt;/p&gt;
&lt;h2 id=&quot;主题&quot;&gt;&lt;a href=&quot;#主题&quot; class=&quot;headerlink&quot; title=&quot;主题&quot;&gt;&lt;/a&gt;主题&lt;/h2&gt;&lt;p&gt;&amp;emsp; 来自Retrofit的官网介绍&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A type-safe HTTP client for Android and Java&lt;br&gt;翻译：Android和Java的类型安全的HTTP客户端&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;emsp; 首先简单介绍下Retrofit这个框架，Retrofit是底层是基于Okhttp的也就是说用法和&lt;code&gt;Okhttp&lt;/code&gt;很相似；Retrofit它是一个HTTP请求工具，和Google开发的Volley功能上非常相似，这里有&lt;a href=&quot;http://bxbxbai.github.io/2014/12/24/read-volley-source-code/&quot;&gt;Volley&lt;/a&gt;的源码解析，但是使用上很不相似。Retrofit使用起来更简单，Volley使用上更加原始而且符合使用者的直觉，其实我觉得如果对自己Volley封装一下也可以像Retrofit那样的简单的使用；&lt;/p&gt;
&lt;h2 id=&quot;如何使用Retrofit&quot;&gt;&lt;a href=&quot;#如何使用Retrofit&quot; class=&quot;headerlink&quot; title=&quot;如何使用Retrofit&quot;&gt;&lt;/a&gt;如何使用Retrofit&lt;/h2&gt;&lt;p&gt;&amp;emsp; 第一步当然是导包了，需要导入的包如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;compile &amp;apos;io.reactivex:rxjava:1.1.0&amp;apos;//Rx的包
compile &amp;apos;io.reactivex:rxandroid:1.1.0&amp;apos;//Rx的包
compile &amp;apos;com.squareup.retrofit2:retrofit:2.0.0-beta4&amp;apos;//Retrofit2所需要的包
compile &amp;apos;com.squareup.retrofit2:converter-gson:2.0.0-beta4&amp;apos;//ConverterFactory的Gson依赖包
compile &amp;apos;com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4&amp;apos;//CallAdapterFactory的Rx依赖包
compile &amp;apos;com.squareup.retrofit2:converter-scalars:2.0.0-beta4&amp;apos;//ConverterFactory的String依赖包
compile &amp;apos;com.google.code.gson:gson:2.6.2&amp;apos;//Gosn解析包
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里需要值得注意的是导入的retrofit2包的&lt;strong&gt;版本必须要一致&lt;/strong&gt;，否则就会报错，我跳过的坑大家就不要再跳了&lt;br&gt;&lt;img src=&quot;\images\retrofit2-error.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp; 首先定义我们请求的Api，我们假设是这样的 &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://106.3.227.33/pulamsi/mobileLogin/submit.html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;与Okhttp不同的是，Retrofit需要定义一个接口，用来返回我们的Call对象，这里示范的是Post请求：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RequestSerives&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;meta&quot;&gt;@POST&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;mobileLogin/submit.html&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;function&quot;&gt;Call&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@Query(&lt;span class=&quot;string&quot;&gt;&quot;loginname&quot;&lt;/span&gt;)&lt;/span&gt; String loginname,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          @&lt;span class=&quot;title&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;nloginpwd&quot;&lt;/span&gt;)&lt;/span&gt; String nloginpwd)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Retrofit2" scheme="http://yoursite.com/tags/Retrofit2/"/>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>博客改版:从Wordpress到Hexo</title>
    <link href="http://yoursite.com/2016/06/16/%E5%8D%9A%E5%AE%A2%E6%94%B9%E7%89%88/"/>
    <id>http://yoursite.com/2016/06/16/博客改版/</id>
    <published>2016-06-16T07:55:01.000Z</published>
    <updated>2016-06-17T09:15:48.726Z</updated>
    
    <content type="html">&lt;p&gt;&amp;emsp; 之前一直有对博客进行改版的想法。从2014年最开始搭建时候使用的 Wordpress 博客到现在的 hexo 静态博客，中间也有换过很多个版本，但是都没有使用多久。&lt;/p&gt;
&lt;p&gt;&amp;emsp; 其实换版本和迁移数据是一个很大的问题，对于网站的Seo也会有影响；但是用Hexo有一个好处就是可以不用支付服务器的费用，每年节省了几百块，而且对于数据来说也比较安全，毕竟数据都是放在&lt;a href=&quot;http://github.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;上的,不用担心忘记续费导致服务器被关停。&lt;/p&gt;
&lt;p&gt;&amp;emsp; 其实在这之前我已经注册过好几个域名了比如：aesion.cn，daidingkang.cc等等，这次迁移到Hexo就不打算在改版了，没有那么多的精力，因为很多东西都会受到牵连；可能是本人的审美的问题，比较喜欢简单白净的页面，不喜欢太花俏和繁琐；博客使用 NexT 主题，并把所有内容生成静态文件。这样访问速度也得到了保证，不像wordpress等那么臃肿；&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&amp;emsp; 之前本人一直都是泡在CSDN，简书，知乎等论坛，博客一直都在CSDN撰写；本网站建成之后可能会同步部分CSDN的文章。本人程序员一枚，我认为每个程序员都应该要养成写博客的好习惯，之前看过一篇文章&lt;a href=&quot;https://www.douban.com/note/532801016/&quot; title=&quot;《究竟为什么程序员最好养成写博客的习惯？》&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《究竟为什么程序员最好养成写博客的习惯？》&lt;/a&gt;，讲的是程序员为什么要学会写博客，文科生最怕看代码，理科生最怕写文章；写作对程序员来说可以更好的理解你的代码，任何的剖析与解读都能让你增长对代码的认识。所以只要自己有时间，闲暇的时候写篇博客，养成一种好习惯。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp; 之前一直有对博客进行改版的想法。从2014年最开始搭建时候使用的 Wordpress 博客到现在的 hexo 静态博客，中间也有换过很多个版本，但是都没有使用多久。&lt;/p&gt;
&lt;p&gt;&amp;emsp; 其实换版本和迁移数据是一个很大的问题，对于网站的Seo也会有影响；
    
    </summary>
    
      <category term="orther" scheme="http://yoursite.com/categories/orther/"/>
    
    
      <category term="orther" scheme="http://yoursite.com/tags/orther/"/>
    
  </entry>
  
</feed>
